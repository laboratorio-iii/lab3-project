{"remainingRequest":"/home/hermesgabriel/workspace/lab3-project/node_modules/babel-loader/lib/index.js!/home/hermesgabriel/workspace/lab3-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/hermesgabriel/workspace/lab3-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hermesgabriel/workspace/lab3-project/src/components/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hermesgabriel/workspace/lab3-project/src/components/Search.vue","mtime":1574534242979},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/cache-loader/dist/cjs.js","mtime":1573791216187},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/babel-loader/lib/index.js","mtime":1573791216119},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/cache-loader/dist/cjs.js","mtime":1573791216187},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/vue-loader/lib/index.js","mtime":1573791221627}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/home/hermesgabriel/workspace/lab3-project/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport UserService from '@/services/UserService';\nimport PostService from '@/services/PostService';\nimport LikeService from '@/services/LikeService';\nimport CommentService from '@/services/CommentService';\nimport CityService from '@/services/CityService';\nimport CategoryService from '@/services/CategoryService';\nexport default {\n  data: function data() {\n    return {\n      tab: null,\n      items: ['Usuarios', 'Publicaciones'],\n      search: '',\n      users: [],\n      city: '',\n      cities: [],\n      posts: [],\n      post: {\n        id: '',\n        index: ''\n      },\n      category: '',\n      categories: [],\n      comments: [],\n      new_comment: '',\n      msg_dialog: false,\n      comments_dialog: false,\n      likedColor: 'red'\n    };\n  },\n  mounted: function mounted() {\n    this.getCities(), this.getCategories();\n  },\n  computed: _objectSpread({}, mapState(['color_base'])),\n  methods: {\n    debug: function debug() {\n      console.log('debug!');\n    },\n    like: function () {\n      var _like = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(i) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return LikeService.like({\n                  post: i,\n                  user: this.$store.state.user._id\n                });\n\n              case 2:\n                response = _context.sent;\n                this.searchPost(this.search, this.categories); // console.log(response.data.result)\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function like(_x) {\n        return _like.apply(this, arguments);\n      }\n\n      return like;\n    }(),\n    getCities: function getCities() {\n      var _this = this;\n\n      CityService.fetchCities().then(function (response) {\n        response.data.cities.forEach(function (city, index) {\n          _this.cities.push(city.name);\n        });\n      });\n    },\n    getCategories: function getCategories() {\n      var _this2 = this;\n\n      CategoryService.fetchCategories().then(function (response) {\n        response.data.categories.forEach(function (category, index) {\n          _this2.categories.push(category.name);\n        });\n      });\n    },\n    searchUser: function searchUser(input, cities) {\n      var _this3 = this;\n\n      if (cities == '') {\n        UserService.searchUser({\n          input: input\n        }).then(function (response) {\n          response.data.users.forEach(function (user) {\n            _this3.users.push(user);\n          });\n        });\n      } else {\n        cities.forEach(function (city) {\n          UserService.searchUserByCity({\n            input: input,\n            city: city\n          }).then(function (response) {\n            response.data.users.forEach(function (user) {\n              _this3.users.push(user);\n            });\n          });\n        });\n      }\n    },\n    searchPost: function searchPost(input, categories) {\n      var _this4 = this;\n\n      this.posts = [];\n\n      if (categories == '') {\n        PostService.searchPost({\n          input: input\n        }).then(function (response) {\n          response.data.posts.forEach(function (post, index) {\n            _this4.posts.push(post);\n\n            LikeService.getLikesByUser(post._id).then(function (r) {\n              _this4.posts[index].liked = r.data.liked;\n            });\n          });\n        });\n      } else {\n        categories.forEach(function (category) {\n          PostService.searchPostByCategory({\n            input: input,\n            category: category\n          }).then(function (response) {\n            response.data.posts.forEach(function (post, index) {\n              _this4.posts.push(post);\n\n              LikeService.getLikesByUser(post._id).then(function (r) {\n                _this4.posts[index].liked = r.data.liked;\n              });\n            });\n          });\n        });\n      }\n    },\n    buscar: function buscar() {\n      if (this.tab == 0) {\n        this.users = [];\n        this.searchUser(this.search, this.city);\n      } else {\n        this.posts = [];\n        this.searchPost(this.search, this.category);\n      }\n    },\n    showComments: function showComments(index, id) {\n      var _this5 = this;\n\n      this.comments = [];\n      this.comments_dialog = true;\n      this.post.index = index;\n      this.post.id = id;\n      CommentService.getComments(id).then(function (response) {\n        response.data.comments.forEach(function (comment) {\n          _this5.comments.push(comment);\n        });\n      });\n    },\n    hideComments: function hideComments() {\n      this.comments = [];\n    },\n    addComment: function addComment(post, i) {\n      if (event.keyCode === 13) {\n        CommentService.addComment({\n          post: post,\n          user: this.$store.state.user._id,\n          content: this.new_comment\n        });\n        this.comments.push({\n          post: post,\n          user: {\n            username: this.$store.state.user.username,\n            image: this.$store.state.user.image\n          },\n          content: this.new_comment\n        });\n        this.new_comment = '';\n      }\n    }\n  },\n  created: function created() {\n    var _this6 = this;\n\n    this.posts.forEach(function (element) {\n      element.liked ? element.color = _this6.likedColor : element.color = 'none';\n    });\n  }\n};",{"version":3,"sources":["Search.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-content>\n        <v-container grid-list-xs>\n            <v-layout row wrap>\n                <v-flex xs12>\n                    <v-text-field\n                        append-icon=\"search\"\n                        label=\"Buscar\"\n                        single-line\n                        hide-details\n                        :color=\"color_base\"\n                        v-model=\"search\"\n                        @keyup=\"buscar()\"\n                    ></v-text-field>\n                </v-flex>\n            </v-layout>\n            <v-tabs\n                v-model=\"tab\"\n                background-color=\"transparent\"\n                :color=\"color_base\"\n                grow\n                class=\"mb-1\"\n                >\n                <v-tab\n                    v-for=\"item in items\"\n                    :key=\"item\"\n                    v-text=\"item\"\n                >\n                </v-tab>\n            </v-tabs>\n\n            <v-tabs-items v-model=\"tab\">\n                <v-tab-item\n                    v-for=\"item in items\"\n                    :key=\"item\"\n                >\n                    <div v-if=\"item == 'Usuarios'\">\n                        <v-layout row wrap align-center>\n                            <v-flex x12>\n                                <v-select\n                                    v-model=\"city\"\n                                    :items=\"cities\"\n                                    attach\n                                    chips\n                                    label=\"Ciudades\"\n                                    multiple\n                                    :color=\"color_base\"\n                                ></v-select>\n                            </v-flex>\n                        </v-layout>\n                        <template v-for=\"(user, index) in users\">\n                            <!-- <v-divider inset :key=\"index\"></v-divider> -->\n                            <v-list-item :key=\"index\" @click=\"debug\">\n                                <v-list-item-icon>\n                                <v-btn x-small class=\"font-weight-light\">\n                                    <v-icon dark left>done</v-icon>Seguir\n                                </v-btn>\n                                </v-list-item-icon>\n\n                                <v-list-item-content>\n                                <v-list-item-title v-text=\"user.username\" right></v-list-item-title>\n                                </v-list-item-content>\n\n                                <v-list-item-avatar>\n                                <v-img :src=\"user.image\"></v-img>\n                                </v-list-item-avatar>\n                            </v-list-item>\n                            <v-divider inset :key=\"user._id\"></v-divider>\n                        </template>\n                    </div>\n\n                    <div v-if=\"item == 'Publicaciones'\">\n                        <v-layout row wrap align-center>\n                            <v-flex x12>\n                                <v-select\n                                    v-model=\"category\"\n                                    :items=\"categories\"\n                                    attach\n                                    chips\n                                    label=\"Categorias\"\n                                    multiple\n                                    :color=\"color_base\"\n                                ></v-select>\n                            </v-flex>\n                        </v-layout>\n                        <v-layout\n                            wrap\n                        >\n                            <v-flex\n                                v-for=\"(post, index) in posts\"\n                                :key=\"index\"\n                                v-bind=\"{ [`xs${post.xsflex}, md${post.mdflex}`]: true }\"\n                                >\n                                <v-card>\n                                    <v-img\n                                    :src=\"post.image\"\n                                    class=\"white--text\"\n                                    height=\"150px\"\n                                    gradient=\"to bottom, rgba(0,0,0,.1), rgba(0,0,0,.5)\"\n                                    >\n                                    <v-card-title\n                                        class=\"fill-height align-end\"\n                                        v-text=\"post.title\"\n                                    ></v-card-title>\n                                    </v-img>\n\n                                    <v-card-text>Precio: $\n                                        <span v-text=\"post.price\"></span>\n                                        <span class=\"float-right\"><v-chip\n                                            :color=\"color_base\"\n                                            label\n                                            small\n                                            v-text=\"post.category.name\"\n                                            text-color=\"white\"\n                                            >\n                                            <v-icon left>mdi-label</v-icon>\n                                            </v-chip></span><br>\n                                        <span class=\"text--primary\" v-text=\"post.description\"></span>\n                                    </v-card-text>\n\n                                    <v-card-actions>\n                                        <div class=\"grey--text ml-1 caption\">\n                                            {{ post.user.firstname +\" \"+ post.user.lastname +\", \"+ post.createdAt}}\n                                        </div>\n                                    <v-spacer></v-spacer>\n                                    \n\n                                    <v-btn icon :color=\"post.liked ? likedColor : 'none'\"\n                                    @click=\"like(post._id)\">\n                                        <v-icon>favorite</v-icon>\n                                    </v-btn>\n\n                                    <v-btn icon @click=\"showComments(index, post._id)\">\n                                        <v-icon>fa fa-comment</v-icon>\n                                    </v-btn>\n                                    \n                                    <v-btn icon @click=\"msg_dialog = true\">\n                                        <v-icon>fa fa-paper-plane</v-icon>\n                                    </v-btn>\n                                    </v-card-actions>\n                                </v-card>\n                                \n                                </v-flex>\n                        </v-layout>\n                    </div>\n                    \n                </v-tab-item>\n            </v-tabs-items>\n\n            <template id=\"msg-dialog\">\n                <v-layout justify-center>\n                    <v-dialog v-model=\"msg_dialog\" max-width=\"600px\">\n                    \n                    <v-card>\n                        <v-card-title>\n                        <span class=\"headline\">Mensaje directo</span>\n                        </v-card-title>\n                        <v-card-text>\n                        <v-container grid-list-md>\n                            <v-layout wrap>\n                            <v-flex xs12>\n                                <v-text-field :color=\"color_base\" label=\"Destinario*\" required></v-text-field>\n                            </v-flex>\n                            <v-flex xs12>\n                                <v-text-field :color=\"color_base\" label=\"Título del mensaje*\" required></v-text-field>\n                            </v-flex>\n                            <v-flex xs12>\n                                <v-textarea\n                                    outlined\n                                    name=\"mgs-body\"\n                                    label=\"Cuerpo del mensaje.\"\n                                    value=\"\"\n                                    :color=\"color_base\"\n                                ></v-textarea>\n                            </v-flex>\n\n                            </v-layout>\n                        </v-container>\n                        </v-card-text>\n                        <v-card-actions>\n                        <v-spacer></v-spacer>\n                        <v-btn :color=\"color_base\" text @click=\"msg_dialog = false\">Salir</v-btn>\n                        <v-btn :color=\"color_base\" text @click=\"msg_dialog = false\">Enviar</v-btn>\n                        </v-card-actions>\n                    </v-card>\n                    </v-dialog>\n                </v-layout>\n            </template>\n\n            <template id=\"comments-dialog\">\n                <v-layout justify-center>\n                    <v-dialog v-model=\"comments_dialog\" max-width=\"600px\" @click:outside=\"hideComments\">\n                    \n                    <v-card>\n                        <v-card-text>\n                        <v-container grid-list-md>\n                            <v-layout wrap>\n                                <v-list three-line>\n                                    <v-subheader>Comentarios</v-subheader>\n                                    <template v-for=\"(comment, c_index) in comments\">\n                                        <!-- <v-subheader\n                                        v-if=\"comment.header\"\n                                        :key=\"comment.header\"\n                                        v-text=\"comment.header\"\n                                        ></v-subheader> -->\n\n                                        <v-divider\n                                        :key=\"comment.title\"\n                                        inset\n                                        color=\"orange\"\n                                        ></v-divider>\n\n                                        <v-list-item\n                                        :key=\"c_index\"\n                                        >\n                                        \n                                        <v-list-item-avatar>\n                                            <v-img :src=\"comment.user.image\"></v-img>\n                                        </v-list-item-avatar>\n\n                                        <v-list-item-content>\n                                            <v-list-item-title v-html=\"comment.user.username\"></v-list-item-title>\n                                            <v-list-item-subtitle v-html=\"comment.content\"></v-list-item-subtitle>\n                                        </v-list-item-content>\n                                        </v-list-item>\n                                    </template>\n                                </v-list>\n\n                                <v-flex xs12>\n                                    <v-form>\n                                        <v-textarea\n                                        outlined\n                                        name=\"mgs-body\"\n                                        label=\"Escriba su comentario aquí\"\n                                        value=\"\"\n                                        v-model=\"new_comment\"\n                                        :color=\"color_base\"\n                                        auto-grow\n                                        hint=\"Pulsa enter para enviar\"\n                                        rows=\"1\"\n                                        @keyup=\"addComment(post.id, post.index)\"\n                                        ></v-textarea>\n                                    </v-form>\n                                </v-flex>\n\n                            </v-layout>\n                        </v-container>\n                        </v-card-text>\n                    </v-card>\n                    </v-dialog>\n                </v-layout>\n            </template>\n\n        </v-container>\n    </v-content>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport UserService from '@/services/UserService'\nimport PostService from '@/services/PostService'\nimport LikeService from '@/services/LikeService'\nimport CommentService from '@/services/CommentService'\nimport CityService from '@/services/CityService'\nimport CategoryService from '@/services/CategoryService'\n\nexport default {\n    data: () => ({\n        tab: null,\n        items: [\n            'Usuarios', 'Publicaciones',\n        ],\n        search: '',\n        users: [],\n        city: '',\n        cities: [],\n        posts: [],\n        post: {\n            id: '',\n            index: ''\n        },\n        category: '',\n        categories: [],\n        comments: [],\n        new_comment: '',\n        msg_dialog: false,\n        comments_dialog: false,\n        likedColor: 'red',\n    }),\n    mounted() {\n        this.getCities(),\n        this.getCategories()\n    },\n    computed: {\n        ...mapState(['color_base'])\n    },\n    methods: {\n        debug() {\n            console.log('debug!')\n        },\n        async like(i) {\n            const response = await LikeService.like({post: i, user: this.$store.state.user._id})\n            this.searchPost(this.search, this.categories)\n            // console.log(response.data.result)\n        },\n        getCities () {\n            CityService.fetchCities().then(response => {\n                response.data.cities.forEach((city, index) => {\n                    this.cities.push(city.name)\n                })\n            })\n        },\n        getCategories () {\n            CategoryService.fetchCategories().then(response => {\n                response.data.categories.forEach((category, index) => {\n                    this.categories.push(category.name)\n                })\n            })\n        },\n        searchUser(input, cities) {\n            if(cities == ''){\n                UserService.searchUser({input}).then(response => {\n                    response.data.users.forEach(user => {\n                        this.users.push(user)\n                    })\n                })\n            }else{\n                cities.forEach(city=>{\n                    UserService.searchUserByCity({input, city}).then(response => {\n                        response.data.users.forEach(user => {\n                            this.users.push(user)\n                        })\n                    })\n                })\n            }\n        },\n        searchPost(input, categories) {\n            this.posts = []\n            if(categories == ''){\n                PostService.searchPost({input}).then(response => {\n                    response.data.posts.forEach((post, index) => {\n                        this.posts.push(post)\n                        LikeService.getLikesByUser(post._id).then(r => {\n                            this.posts[index].liked = r.data.liked\n                        })\n                    })\n                })\n            }else{\n                categories.forEach(category=>{\n                    PostService.searchPostByCategory({input, category}).then(response => {\n                        response.data.posts.forEach((post, index) => {\n                            this.posts.push(post)\n                            LikeService.getLikesByUser(post._id).then(r => {\n                                this.posts[index].liked = r.data.liked\n                            })\n                        })\n                    })\n                })\n            }\n        },\n        buscar() {\n            if(this.tab == 0){\n                this.users = []\n                this.searchUser(this.search, this.city)\n            }else{\n                this.posts = []\n                this.searchPost(this.search, this.category)\n            }\n        },\n        showComments(index, id) {\n            this.comments = []\n            this.comments_dialog = true\n            this.post.index = index\n            this.post.id = id\n\n            CommentService.getComments(id).then(response => {\n                response.data.comments.forEach(comment => {\n                    this.comments.push(comment)\n                })\n            })\n        },\n        hideComments() {\n            this.comments = []\n        },\n        addComment(post, i) {\n            if (event.keyCode === 13) {\n                CommentService.addComment({\n                    post: post,\n                    user: this.$store.state.user._id,\n                    content: this.new_comment\n                })\n                this.comments.push({\n                    post: post,\n                    user: {\n                        username: this.$store.state.user.username,\n                        image: this.$store.state.user.image\n                    },\n                    content: this.new_comment\n                })\n                this.new_comment = ''\n            }\n        }\n    },\n    created() {\n        this.posts.forEach(element => {\n            element.liked ? element.color = this.likedColor : element.color = 'none'\n        });\n    },\n}\n</script>"],"sourceRoot":"src/components"}]}