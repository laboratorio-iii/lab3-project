{"remainingRequest":"/home/hermesgabriel/workspace/lab3-project/node_modules/babel-loader/lib/index.js!/home/hermesgabriel/workspace/lab3-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/hermesgabriel/workspace/lab3-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hermesgabriel/workspace/lab3-project/src/components/Settings.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hermesgabriel/workspace/lab3-project/src/components/Settings.vue","mtime":1574650519950},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/cache-loader/dist/cjs.js","mtime":1573791216187},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/babel-loader/lib/index.js","mtime":1573791216119},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/cache-loader/dist/cjs.js","mtime":1573791216187},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/vue-loader/lib/index.js","mtime":1573791221627}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapMutations } from 'vuex';\nimport UserService from '@/services/UserService';\nexport default {\n  data: function data() {\n    return {\n      show: false,\n      rules: {\n        required: function required(value) {\n          return !!value || 'Requerido';\n        },\n        min: function min(v) {\n          return v.length >= 8 || 'Mínimo 8 caracteres';\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.onNavBtn();\n  },\n  computed: _objectSpread({}, mapState(['color_base', 'user']), {\n    activeBtnValue: {\n      get: function get() {\n        return this.$store.state.activeBtn;\n      },\n      set: function set(val) {\n        this.setActiveBtn(val);\n      }\n    }\n  }),\n  methods: _objectSpread({}, mapMutations(['setActiveBtn']), {\n    onNavBtn: function onNavBtn() {\n      this.setActiveBtn();\n    },\n    onPickFile: function onPickFile() {\n      this.$refs.fileInput.click();\n    },\n    updateUser: function updateUser() {\n      var _this = this;\n\n      event.preventDefault();\n      UserService.updateUserSettings(this.user).then(function (response) {\n        _this.dialog = false;\n      });\n    }\n  })\n};",{"version":3,"sources":["Settings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA,SAAA,QAAA,EAAA,YAAA,QAAA,MAAA;AACA,OAAA,WAAA,MAAA,wBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,KAAA,EAAA;AACA,QAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,iBAAA,CAAA,CAAA,KAAA,IAAA,WAAA;AAAA,SADA;AAEA,QAAA,GAAA,EAAA,aAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,MAAA,IAAA,CAAA,IAAA,qBAAA;AAAA;AAFA;AAFA,KAAA;AAAA,GADA;AAQA,EAAA,OARA,qBAQA;AACA,SAAA,QAAA;AACA,GAVA;AAWA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,YAAA,EAAA,MAAA,CAAA,CADA;AAEA,IAAA,cAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,GAJA,EAIA;AACA,aAAA,YAAA,CAAA,GAAA;AACA;AANA;AAFA,IAXA;AAsBA,EAAA,OAAA,oBACA,YAAA,CAAA,CAAA,cAAA,CAAA,CADA;AAEA,IAAA,QAFA,sBAEA;AACA,WAAA,YAAA;AACA,KAJA;AAKA,IAAA,UALA,wBAKA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,KAAA;AACA,KAPA;AAQA,IAAA,UARA,wBAQA;AAAA;;AACA,MAAA,KAAA,CAAA,cAAA;AACA,MAAA,WAAA,CAAA,kBAAA,CAAA,KAAA,IAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,KAAA;AACA,OAFA;AAGA;AAbA;AAtBA,CAAA","sourcesContent":["<template>\n    <v-content>\n        <v-container grid-list-xs>\n            <v-layout row wrap align-center justify-center>\n                <v-flex>\n                    <v-card class=\"mx-auto\" max-width=\"400\">\n\n                        <v-card-title primary-title>\n                            Información de acceso\n                        </v-card-title>\n\n                        <v-card-text>\n                            <v-form>\n                                <v-layout row wrap>\n\n                                    <v-flex>\n                                        <v-text-field :color=\"color_base\"\n                                            name=\"username\"\n                                            label=\"Usuario\"\n                                            id=\"username\"\n                                            v-model=\"user.username\"\n                                        ></v-text-field>\n                                    </v-flex>\n\n                                    <!-- <v-flex>\n                                        <v-text-field :color=\"color_base\"\n                                            :append-icon=\"show ? 'visibility' : 'visibility_off'\"\n                                            :rules=\"[rules.required]\"\n                                            :type=\"show ? 'text' : 'password'\"\n                                            name=\"password\"\n                                            label=\"Contraseña\"\n                                            @click:append=\"show = !show\"\n                                            id=\"rpass\"\n                                            v-model=\"user.password\"\n                                        ></v-text-field>\n                                    </v-flex>\n                                    <v-flex>\n                                        <v-text-field :color=\"color_base\"\n                                            :append-icon=\"show ? 'visibility' : 'visibility_off'\"\n                                            :rules=\"[rules.required]\"\n                                            :type=\"show ? 'text' : 'password'\"\n                                            name=\"rpassword\"\n                                            label=\"Repita su contraseña\"\n                                            @click:append=\"show = !show\"\n                                        ></v-text-field>\n                                    </v-flex> -->\n                                </v-layout>\n                                \n                                <v-btn block class=\"ma-a\" outlined :color=\"color_base\" @click=\"updateUser\">\n                                    <v-icon left>edit</v-icon>Guardar cambios\n                                </v-btn>\n                            </v-form>\n                            \n                        </v-card-text>\n                    </v-card>\n                </v-flex>\n            </v-layout>\n        </v-container>\n    </v-content>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\nimport UserService from '@/services/UserService'\n\nexport default {\n    data: () => ({\n        show: false,\n        rules: {\n            required: value => !!value || 'Requerido',\n            min: v => v.length >= 8 || 'Mínimo 8 caracteres',\n        }\n    }),\n    mounted() {\n        this.onNavBtn()\n    },\n    computed: {\n        ...mapState(['color_base', 'user']),\n        activeBtnValue: {\n            get () {\n                return this.$store.state.activeBtn\n            },\n            set (val) {\n                this.setActiveBtn(val)\n            }\n        }, \n  },\n  methods: {\n        ...mapMutations(['setActiveBtn']),\n        onNavBtn () {\n            this.setActiveBtn()\n        },\n         onPickFile() {\n             this.$refs.fileInput.click()\n         },\n         updateUser() {\n             event.preventDefault()\n            UserService.updateUserSettings(this.user).then(response => {\n                this.dialog = false\n            })\n        }\n    },\n}\n</script>"],"sourceRoot":"src/components"}]}