{"remainingRequest":"/home/hermesgabriel/workspace/lab3-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hermesgabriel/workspace/lab3-project/src/components/Seguidores.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hermesgabriel/workspace/lab3-project/src/components/Seguidores.vue","mtime":1574614267666},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/cache-loader/dist/cjs.js","mtime":1573791216187},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/babel-loader/lib/index.js","mtime":1573791216119},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/cache-loader/dist/cjs.js","mtime":1573791216187},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/vue-loader/lib/index.js","mtime":1573791221627}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapMutations } from 'vuex'\nimport FollowService from '@/services/FollowService'\n\nexport default {\n    data: () => ({\n        items: [],\n    }),\n    mounted(){\n        this.getFollowers()\n    },\n    computed: {\n        ...mapState(['color_base', 'user']),\n    },\n    methods: {\n        debug() {\n            console.log(event.target)\n        },\n        getFollowers() {\n            FollowService.getFollowers(this.$route.params.user).then(response => {\n                response.data.followers.forEach((follower, index) => {\n                    this.items.push(follower)\n                    FollowService.getFollower(follower._id).then(r => {\n                        this.items[index].follower.followed = r.data.followed\n                    })\n                })\n            })\n        }\n    } \n}\n",{"version":3,"sources":["Seguidores.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Seguidores.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-layout column>\n        <v-list>\n            <template v-for=\"(item, index) in items\">\n        \n                <v-list-item :key=\"item.follower.username\" @click=\"debug\">\n                    <v-list-item-icon>\n                    <v-btn v-if=\"item.follower._id != user._id\" x-small class=\"font-weight-light\">\n                        <v-icon dark left>done</v-icon>Seguir\n                    </v-btn>\n                    </v-list-item-icon>\n\n                    <v-list-item-content>\n                        <v-list-item-title right>{{ item.follower.firstname +\" \"+ item.follower.lastname}}</v-list-item-title>\n                        <span class=\"grey--text caption\" v-text=\"item.follower.username\"></span>\n                    </v-list-item-content>\n\n                    <v-list-item-avatar>\n                    <v-img :src=\"item.follower.image\"></v-img>\n                    </v-list-item-avatar>\n                </v-list-item>\n                <v-divider inset :key=\"index\"></v-divider>\n\n            </template>\n        </v-list>\n    </v-layout>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\nimport FollowService from '@/services/FollowService'\n\nexport default {\n    data: () => ({\n        items: [],\n    }),\n    mounted(){\n        this.getFollowers()\n    },\n    computed: {\n        ...mapState(['color_base', 'user']),\n    },\n    methods: {\n        debug() {\n            console.log(event.target)\n        },\n        getFollowers() {\n            FollowService.getFollowers(this.$route.params.user).then(response => {\n                response.data.followers.forEach((follower, index) => {\n                    this.items.push(follower)\n                    FollowService.getFollower(follower._id).then(r => {\n                        this.items[index].follower.followed = r.data.followed\n                    })\n                })\n            })\n        }\n    } \n}\n</script>"]}]}