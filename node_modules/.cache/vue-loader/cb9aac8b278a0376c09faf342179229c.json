{"remainingRequest":"/home/hermesgabriel/workspace/lab3-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hermesgabriel/workspace/lab3-project/src/components/Seguidos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hermesgabriel/workspace/lab3-project/src/components/Seguidos.vue","mtime":1574617384710},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/cache-loader/dist/cjs.js","mtime":1573791216187},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/babel-loader/lib/index.js","mtime":1573791216119},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/cache-loader/dist/cjs.js","mtime":1573791216187},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/vue-loader/lib/index.js","mtime":1573791221627}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex'\nimport FollowService from '@/services/FollowService'\n\nexport default {\n    data: () => ({\n        items: [],\n    }),\n    mounted(){\n        this.getFolloweds()\n    },\n    computed: {\n        ...mapState(['color_base', 'user']),\n    },\n    methods: {\n        debug() {\n            console.log(event.target)\n        },\n        getFolloweds() {\n            this.items = []\n            FollowService.getFolloweds(this.$route.params.user).then(response => {\n                response.data.followeds.forEach((followed, index) => {\n                    this.items.push(followed)\n                    FollowService.getFollower(followed.followed._id).then(r => {\n                        this.items[index].followed.followed = r.data.followed\n                    })\n                })\n            })\n        },\n        GoToProfile(username){\n            this.$router.push({ name: 'profile', params: { user: username } })\n        },\n        follow(id) {\n            FollowService.follow({followed: id, follower: this.$store.state.user._id}).then(response => {\n                this.getFolloweds()\n            })\n        }\n    } \n}\n",{"version":3,"sources":["Seguidos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Seguidos.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-layout column>\n        <v-list>\n            <template v-for=\"(item, index) in items\">\n                \n                <v-list-item :key=\"item.followed.username\">\n                    <v-list-item-icon v-if=\"item.followed._id != user._id\">\n                        <v-btn v-if=\"!item.followed.followed\" x-small class=\"font-weight-light\" @click=\"follow(item.followed._id)\">\n                            <v-icon dark left>done</v-icon>Seguir\n                        </v-btn>\n                        <v-btn v-else x-small block class=\"font-weight-light white--text\" :color=\"color_base\" @click=\"follow(item.followed._id)\">\n                            <v-icon dark left>done</v-icon>Seguido\n                        </v-btn>\n                    </v-list-item-icon>\n\n                    <v-list-item-content>\n                        <v-list-item-title right>{{ item.followed.firstname +\" \"+ item.followed.lastname }}</v-list-item-title>\n                        <span class=\"grey--text caption\" v-text=\"item.followed.username\"></span>\n                    </v-list-item-content>\n\n                    <v-list-item-avatar>\n                    <v-img :src=\"item.followed.image\"></v-img>\n                    </v-list-item-avatar>\n                </v-list-item>\n\n                <v-divider inset :key=\"index\"></v-divider>\n\n            </template>\n        </v-list>\n    </v-layout>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport FollowService from '@/services/FollowService'\n\nexport default {\n    data: () => ({\n        items: [],\n    }),\n    mounted(){\n        this.getFolloweds()\n    },\n    computed: {\n        ...mapState(['color_base', 'user']),\n    },\n    methods: {\n        debug() {\n            console.log(event.target)\n        },\n        getFolloweds() {\n            this.items = []\n            FollowService.getFolloweds(this.$route.params.user).then(response => {\n                response.data.followeds.forEach((followed, index) => {\n                    this.items.push(followed)\n                    FollowService.getFollower(followed.followed._id).then(r => {\n                        this.items[index].followed.followed = r.data.followed\n                    })\n                })\n            })\n        },\n        GoToProfile(username){\n            this.$router.push({ name: 'profile', params: { user: username } })\n        },\n        follow(id) {\n            FollowService.follow({followed: id, follower: this.$store.state.user._id}).then(response => {\n                this.getFolloweds()\n            })\n        }\n    } \n}\n</script>"]}]}