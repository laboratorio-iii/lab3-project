{"remainingRequest":"/home/hermesgabriel/workspace/lab3-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hermesgabriel/workspace/lab3-project/src/components/Settings.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hermesgabriel/workspace/lab3-project/src/components/Settings.vue","mtime":1574650519950},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/cache-loader/dist/cjs.js","mtime":1573791216187},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/babel-loader/lib/index.js","mtime":1573791216119},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/cache-loader/dist/cjs.js","mtime":1573791216187},{"path":"/home/hermesgabriel/workspace/lab3-project/node_modules/vue-loader/lib/index.js","mtime":1573791221627}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapMutations } from 'vuex'\nimport UserService from '@/services/UserService'\n\nexport default {\n    data: () => ({\n        show: false,\n        rules: {\n            required: value => !!value || 'Requerido',\n            min: v => v.length >= 8 || 'Mínimo 8 caracteres',\n        }\n    }),\n    mounted() {\n        this.onNavBtn()\n    },\n    computed: {\n        ...mapState(['color_base', 'user']),\n        activeBtnValue: {\n            get () {\n                return this.$store.state.activeBtn\n            },\n            set (val) {\n                this.setActiveBtn(val)\n            }\n        }, \n  },\n  methods: {\n        ...mapMutations(['setActiveBtn']),\n        onNavBtn () {\n            this.setActiveBtn()\n        },\n         onPickFile() {\n             this.$refs.fileInput.click()\n         },\n         updateUser() {\n             event.preventDefault()\n            UserService.updateUserSettings(this.user).then(response => {\n                this.dialog = false\n            })\n        }\n    },\n}\n",{"version":3,"sources":["Settings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Settings.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-content>\n        <v-container grid-list-xs>\n            <v-layout row wrap align-center justify-center>\n                <v-flex>\n                    <v-card class=\"mx-auto\" max-width=\"400\">\n\n                        <v-card-title primary-title>\n                            Información de acceso\n                        </v-card-title>\n\n                        <v-card-text>\n                            <v-form>\n                                <v-layout row wrap>\n\n                                    <v-flex>\n                                        <v-text-field :color=\"color_base\"\n                                            name=\"username\"\n                                            label=\"Usuario\"\n                                            id=\"username\"\n                                            v-model=\"user.username\"\n                                        ></v-text-field>\n                                    </v-flex>\n\n                                    <!-- <v-flex>\n                                        <v-text-field :color=\"color_base\"\n                                            :append-icon=\"show ? 'visibility' : 'visibility_off'\"\n                                            :rules=\"[rules.required]\"\n                                            :type=\"show ? 'text' : 'password'\"\n                                            name=\"password\"\n                                            label=\"Contraseña\"\n                                            @click:append=\"show = !show\"\n                                            id=\"rpass\"\n                                            v-model=\"user.password\"\n                                        ></v-text-field>\n                                    </v-flex>\n                                    <v-flex>\n                                        <v-text-field :color=\"color_base\"\n                                            :append-icon=\"show ? 'visibility' : 'visibility_off'\"\n                                            :rules=\"[rules.required]\"\n                                            :type=\"show ? 'text' : 'password'\"\n                                            name=\"rpassword\"\n                                            label=\"Repita su contraseña\"\n                                            @click:append=\"show = !show\"\n                                        ></v-text-field>\n                                    </v-flex> -->\n                                </v-layout>\n                                \n                                <v-btn block class=\"ma-a\" outlined :color=\"color_base\" @click=\"updateUser\">\n                                    <v-icon left>edit</v-icon>Guardar cambios\n                                </v-btn>\n                            </v-form>\n                            \n                        </v-card-text>\n                    </v-card>\n                </v-flex>\n            </v-layout>\n        </v-container>\n    </v-content>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex'\nimport UserService from '@/services/UserService'\n\nexport default {\n    data: () => ({\n        show: false,\n        rules: {\n            required: value => !!value || 'Requerido',\n            min: v => v.length >= 8 || 'Mínimo 8 caracteres',\n        }\n    }),\n    mounted() {\n        this.onNavBtn()\n    },\n    computed: {\n        ...mapState(['color_base', 'user']),\n        activeBtnValue: {\n            get () {\n                return this.$store.state.activeBtn\n            },\n            set (val) {\n                this.setActiveBtn(val)\n            }\n        }, \n  },\n  methods: {\n        ...mapMutations(['setActiveBtn']),\n        onNavBtn () {\n            this.setActiveBtn()\n        },\n         onPickFile() {\n             this.$refs.fileInput.click()\n         },\n         updateUser() {\n             event.preventDefault()\n            UserService.updateUserSettings(this.user).then(response => {\n                this.dialog = false\n            })\n        }\n    },\n}\n</script>"]}]}